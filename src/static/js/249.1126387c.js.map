{"version":3,"file":"js/249.1126387c.js","mappings":"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","sources":["webpack://dockerforge-web-ui/./src/views/backup/BackupList.vue","webpack://dockerforge-web-ui/./src/views/backup/BackupList.vue?f5c0"],"sourcesContent":["<template>\n  <div class=\"backup-list\">\n    <h1 class=\"text-h4 mb-4\">Backups</h1>\n\n    <!-- Filters and Actions -->\n    <v-card class=\"mb-4\">\n      <v-card-text>\n        <v-row>\n          <v-col cols=\"12\" sm=\"4\">\n            <v-text-field\n              v-model=\"filters.name\"\n              label=\"Filter by name\"\n              prepend-icon=\"mdi-magnify\"\n              clearable\n              @input=\"applyFilters\"\n            ></v-text-field>\n          </v-col>\n          <v-col cols=\"12\" sm=\"4\">\n            <v-select\n              v-model=\"filters.type\"\n              :items=\"backupTypeOptions\"\n              label=\"Filter by type\"\n              prepend-icon=\"mdi-filter\"\n              clearable\n              @change=\"applyFilters\"\n            ></v-select>\n          </v-col>\n          <v-col cols=\"12\" sm=\"4\" class=\"d-flex align-center justify-end\">\n            <v-btn color=\"primary\" @click=\"showCreateBackupDialog\">\n              <v-icon left>mdi-plus</v-icon>\n              Create Backup\n            </v-btn>\n          </v-col>\n        </v-row>\n      </v-card-text>\n    </v-card>\n\n    <!-- Loading State -->\n    <div v-if=\"loading\" class=\"d-flex justify-center align-center my-5\">\n      <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\n    </div>\n\n    <!-- Error State -->\n    <v-alert v-else-if=\"error\" type=\"error\" class=\"mb-4\">\n      {{ error }}\n    </v-alert>\n\n    <!-- Empty State -->\n    <v-card v-else-if=\"backups.length === 0\" class=\"mb-4 text-center pa-5\">\n      <v-icon size=\"64\" color=\"grey lighten-1\">mdi-backup-restore</v-icon>\n      <h3 class=\"text-h5 mt-4\">No backups found</h3>\n      <p class=\"text-body-1 mt-2\">\n        {{ filters.name || filters.type ? 'Try adjusting your filters' : 'Create your first backup to protect your data' }}\n      </p>\n      <v-btn color=\"primary\" class=\"mt-4\" @click=\"showCreateBackupDialog\">\n        <v-icon left>mdi-plus</v-icon>\n        Create Backup\n      </v-btn>\n    </v-card>\n\n    <!-- Backup List -->\n    <v-card v-else>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"backups\"\n        :items-per-page=\"10\"\n        :footer-props=\"{\n          'items-per-page-options': [5, 10, 15, 20],\n        }\"\n        class=\"elevation-1\"\n      >\n        <!-- Name Column -->\n        <template v-slot:item.name=\"{ item }\">\n          <div class=\"font-weight-medium\">{{ item.name }}</div>\n          <div class=\"text-caption\">{{ item.description }}</div>\n        </template>\n\n        <!-- Type Column -->\n        <template v-slot:item.type=\"{ item }\">\n          <v-chip\n            :color=\"getBackupTypeColor(item.type)\"\n            text-color=\"white\"\n            small\n          >\n            {{ item.type }}\n          </v-chip>\n        </template>\n\n        <!-- Status Column -->\n        <template v-slot:item.status=\"{ item }\">\n          <v-chip\n            :color=\"getStatusColor(item.status)\"\n            text-color=\"white\"\n            small\n          >\n            {{ item.status }}\n          </v-chip>\n        </template>\n\n        <!-- Size Column -->\n        <template v-slot:item.size=\"{ item }\">\n          {{ formatSize(item.size) }}\n        </template>\n\n        <!-- Created Column -->\n        <template v-slot:item.created_at=\"{ item }\">\n          {{ formatDate(item.created_at) }}\n        </template>\n\n        <!-- Actions Column -->\n        <template v-slot:item.actions=\"{ item }\">\n          <v-btn\n            icon\n            small\n            @click=\"showRestoreDialog(item)\"\n            title=\"Restore\"\n            :disabled=\"item.status !== 'completed'\"\n          >\n            <v-icon small>mdi-backup-restore</v-icon>\n          </v-btn>\n          <v-btn\n            icon\n            small\n            @click=\"downloadBackup(item)\"\n            title=\"Download\"\n            :disabled=\"item.status !== 'completed'\"\n          >\n            <v-icon small>mdi-download</v-icon>\n          </v-btn>\n          <v-btn\n            icon\n            small\n            @click=\"showDeleteDialog(item)\"\n            title=\"Delete\"\n          >\n            <v-icon small>mdi-delete</v-icon>\n          </v-btn>\n        </template>\n      </v-data-table>\n    </v-card>\n\n    <!-- Create Backup Dialog -->\n    <v-dialog v-model=\"createBackupDialog\" max-width=\"600\">\n      <v-card>\n        <v-card-title class=\"headline\">Create Backup</v-card-title>\n        <v-card-text>\n          <v-form ref=\"createBackupForm\" v-model=\"createBackupFormValid\">\n            <v-text-field\n              v-model=\"newBackup.name\"\n              label=\"Backup Name\"\n              :rules=\"[v => !!v || 'Name is required']\"\n              required\n            ></v-text-field>\n            \n            <v-textarea\n              v-model=\"newBackup.description\"\n              label=\"Description\"\n              rows=\"2\"\n            ></v-textarea>\n            \n            <v-select\n              v-model=\"newBackup.type\"\n              :items=\"backupTypeOptions\"\n              label=\"Backup Type\"\n              :rules=\"[v => !!v || 'Type is required']\"\n              required\n            ></v-select>\n            \n            <v-select\n              v-model=\"newBackup.resources\"\n              :items=\"resourceOptions\"\n              label=\"Resources to Backup\"\n              multiple\n              chips\n              :rules=\"[v => v.length > 0 || 'Select at least one resource']\"\n              required\n            ></v-select>\n            \n            <v-checkbox\n              v-model=\"newBackup.includeVolumes\"\n              label=\"Include volumes\"\n            ></v-checkbox>\n            \n            <v-checkbox\n              v-model=\"newBackup.compress\"\n              label=\"Compress backup\"\n            ></v-checkbox>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey darken-1\" text @click=\"createBackupDialog = false\">\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"primary\"\n            text\n            @click=\"createBackup\"\n            :disabled=\"!createBackupFormValid || creatingBackup\"\n            :loading=\"creatingBackup\"\n          >\n            Create\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- Restore Backup Dialog -->\n    <v-dialog v-model=\"restoreDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"headline\">Restore Backup</v-card-title>\n        <v-card-text>\n          Are you sure you want to restore the backup <strong>{{ selectedBackup?.name }}</strong>?\n          <v-alert\n            type=\"warning\"\n            class=\"mt-3\"\n            dense\n          >\n            This will replace your current data with the backup data. This action cannot be undone.\n          </v-alert>\n          \n          <v-checkbox\n            v-model=\"restoreOptions.includeVolumes\"\n            label=\"Restore volumes\"\n            class=\"mt-4\"\n          ></v-checkbox>\n          \n          <v-checkbox\n            v-model=\"restoreOptions.stopContainers\"\n            label=\"Stop running containers before restore\"\n            class=\"mt-2\"\n          ></v-checkbox>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey darken-1\" text @click=\"restoreDialog = false\">\n            Cancel\n          </v-btn>\n          <v-btn\n            color=\"warning\"\n            text\n            @click=\"restoreBackup\"\n            :loading=\"restoringBackup\"\n          >\n            Restore\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- Delete Confirmation Dialog -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"headline\">Delete Backup</v-card-title>\n        <v-card-text>\n          Are you sure you want to delete the backup <strong>{{ selectedBackup?.name }}</strong>?\n          This action cannot be undone.\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey darken-1\" text @click=\"deleteDialog = false\">\n            Cancel\n          </v-btn>\n          <v-btn color=\"red darken-1\" text @click=\"deleteBackup\">\n            Delete\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default {\n  name: 'BackupList',\n  data() {\n    return {\n      loading: true,\n      error: null,\n      backups: [],\n      filters: {\n        name: '',\n        type: '',\n      },\n      backupTypeOptions: [\n        { text: 'All', value: '' },\n        { text: 'Full', value: 'full' },\n        { text: 'Containers', value: 'containers' },\n        { text: 'Images', value: 'images' },\n        { text: 'Volumes', value: 'volumes' },\n        { text: 'Configuration', value: 'config' },\n      ],\n      resourceOptions: [\n        'All Containers',\n        'All Images',\n        'All Volumes',\n        'All Networks',\n        'Docker Configuration',\n      ],\n      headers: [\n        { text: 'Name', value: 'name', sortable: true },\n        { text: 'Type', value: 'type', sortable: true },\n        { text: 'Status', value: 'status', sortable: true },\n        { text: 'Size', value: 'size', sortable: true },\n        { text: 'Created', value: 'created_at', sortable: true },\n        { text: 'Actions', value: 'actions', sortable: false, align: 'center' },\n      ],\n      createBackupDialog: false,\n      createBackupFormValid: false,\n      creatingBackup: false,\n      newBackup: {\n        name: '',\n        description: '',\n        type: 'full',\n        resources: ['All Containers'],\n        includeVolumes: true,\n        compress: true,\n      },\n      restoreDialog: false,\n      restoringBackup: false,\n      restoreOptions: {\n        includeVolumes: true,\n        stopContainers: true,\n      },\n      deleteDialog: false,\n      selectedBackup: null,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      isAuthenticated: 'auth/isAuthenticated',\n      token: 'auth/token',\n    }),\n  },\n  created() {\n    this.fetchBackups();\n  },\n  methods: {\n    async fetchBackups() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        // In a real implementation, this would call the API\n        // const response = await axios.get('/api/backups', {\n        //   headers: { Authorization: `Bearer ${this.token}` },\n        //   params: this.filters,\n        // });\n        // this.backups = response.data;\n\n        // Mock data for development\n        setTimeout(() => {\n          this.backups = [\n            {\n              id: 'b1',\n              name: 'Weekly Full Backup',\n              description: 'Automated weekly backup of all resources',\n              type: 'full',\n              status: 'completed',\n              size: 1024 * 1024 * 1024 * 2.5, // 2.5 GB\n              created_at: '2025-03-16T00:00:00Z',\n            },\n            {\n              id: 'b2',\n              name: 'Pre-deployment Backup',\n              description: 'Manual backup before major deployment',\n              type: 'containers',\n              status: 'completed',\n              size: 1024 * 1024 * 512, // 512 MB\n              created_at: '2025-03-15T12:00:00Z',\n            },\n            {\n              id: 'b3',\n              name: 'Database Volumes',\n              description: 'Backup of database volumes only',\n              type: 'volumes',\n              status: 'completed',\n              size: 1024 * 1024 * 1024 * 1.2, // 1.2 GB\n              created_at: '2025-03-14T08:00:00Z',\n            },\n            {\n              id: 'b4',\n              name: 'Configuration Backup',\n              description: 'Docker daemon and container configurations',\n              type: 'config',\n              status: 'completed',\n              size: 1024 * 1024 * 5, // 5 MB\n              created_at: '2025-03-13T16:00:00Z',\n            },\n            {\n              id: 'b5',\n              name: 'Image Repository',\n              description: 'Backup of all local images',\n              type: 'images',\n              status: 'in-progress',\n              size: 0,\n              created_at: '2025-03-17T05:30:00Z',\n            },\n          ];\n          this.loading = false;\n        }, 1000);\n      } catch (error) {\n        this.error = 'Failed to load backups. Please try again.';\n        this.loading = false;\n      }\n    },\n    applyFilters() {\n      this.fetchBackups();\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    },\n    formatSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      \n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      \n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    },\n    getBackupTypeColor(type) {\n      switch (type) {\n        case 'full':\n          return 'primary';\n        case 'containers':\n          return 'success';\n        case 'images':\n          return 'info';\n        case 'volumes':\n          return 'warning';\n        case 'config':\n          return 'purple';\n        default:\n          return 'grey';\n      }\n    },\n    getStatusColor(status) {\n      switch (status) {\n        case 'completed':\n          return 'success';\n        case 'in-progress':\n          return 'info';\n        case 'failed':\n          return 'error';\n        default:\n          return 'grey';\n      }\n    },\n    showCreateBackupDialog() {\n      this.newBackup = {\n        name: '',\n        description: '',\n        type: 'full',\n        resources: ['All Containers'],\n        includeVolumes: true,\n        compress: true,\n      };\n      this.createBackupDialog = true;\n    },\n    async createBackup() {\n      if (!this.$refs.createBackupForm.validate()) return;\n      \n      this.creatingBackup = true;\n      \n      try {\n        // In a real implementation, this would call the API\n        // await axios.post('/api/backups', this.newBackup, {\n        //   headers: { Authorization: `Bearer ${this.token}` },\n        // });\n        \n        // Mock implementation\n        setTimeout(() => {\n          const newBackupId = `b${this.backups.length + 1}`;\n          const now = new Date().toISOString();\n          \n          this.backups.unshift({\n            id: newBackupId,\n            name: this.newBackup.name,\n            description: this.newBackup.description,\n            type: this.newBackup.type,\n            status: 'in-progress',\n            size: 0,\n            created_at: now,\n          });\n          \n          // Simulate backup completion after 3 seconds\n          setTimeout(() => {\n            const index = this.backups.findIndex(b => b.id === newBackupId);\n            if (index !== -1) {\n              this.backups[index].status = 'completed';\n              this.backups[index].size = Math.random() * 1024 * 1024 * 1024 * 3; // Random size up to 3 GB\n              this.$forceUpdate();\n            }\n          }, 3000);\n          \n          this.createBackupDialog = false;\n          this.creatingBackup = false;\n        }, 1000);\n      } catch (error) {\n        this.error = 'Failed to create backup. Please try again.';\n        this.creatingBackup = false;\n      }\n    },\n    showRestoreDialog(backup) {\n      this.selectedBackup = backup;\n      this.restoreOptions = {\n        includeVolumes: true,\n        stopContainers: true,\n      };\n      this.restoreDialog = true;\n    },\n    async restoreBackup() {\n      this.restoringBackup = true;\n      \n      try {\n        // In a real implementation, this would call the API\n        // await axios.post(`/api/backups/${this.selectedBackup.id}/restore`, this.restoreOptions, {\n        //   headers: { Authorization: `Bearer ${this.token}` },\n        // });\n        \n        // Mock implementation\n        setTimeout(() => {\n          this.restoreDialog = false;\n          this.restoringBackup = false;\n          \n          // Show success message\n          this.$emit('show-notification', {\n            type: 'success',\n            message: `Backup ${this.selectedBackup.name} restored successfully`,\n          });\n        }, 2000);\n      } catch (error) {\n        this.error = `Failed to restore backup ${this.selectedBackup.name}`;\n        this.restoringBackup = false;\n      }\n    },\n    downloadBackup(backup) {\n      // In a real implementation, this would trigger a file download\n      // window.location.href = `/api/backups/${backup.id}/download?token=${this.token}`;\n      \n      // Mock implementation - just show a notification\n      this.$emit('show-notification', {\n        type: 'info',\n        message: `Downloading backup: ${backup.name} (${this.formatSize(backup.size)})`,\n      });\n    },\n    showDeleteDialog(backup) {\n      this.selectedBackup = backup;\n      this.deleteDialog = true;\n    },\n    async deleteBackup() {\n      if (!this.selectedBackup) return;\n      \n      try {\n        // In a real implementation, this would call the API\n        // await axios.delete(`/api/backups/${this.selectedBackup.id}`, {\n        //   headers: { Authorization: `Bearer ${this.token}` },\n        // });\n        \n        // Mock implementation\n        this.backups = this.backups.filter(b => b.id !== this.selectedBackup.id);\n        this.deleteDialog = false;\n        this.selectedBackup = null;\n      } catch (error) {\n        this.error = `Failed to delete backup ${this.selectedBackup.name}`;\n        this.deleteDialog = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.backup-list {\n  padding: 16px;\n}\n</style>\n","import { render } from \"./BackupList.vue?vue&type=template&id=9b0d349c&scoped=true\"\nimport script from \"./BackupList.vue?vue&type=script&lang=js\"\nexport * from \"./BackupList.vue?vue&type=script&lang=js\"\n\nimport \"./BackupList.vue?vue&type=style&index=0&id=9b0d349c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9b0d349c\"]])\n\nexport default __exports__"],"names":["class","cols","sm","filters","name","label","clearable","applyFilters","type","items","backupTypeOptions","color","showCreateBackupDialog","left","indeterminate","error","backups","length","size","headers","item","description","getBackupTypeColor","small","getStatusColor","status","formatSize","formatDate","created_at","icon","showRestoreDialog","title","disabled","downloadBackup","showDeleteDialog","createBackupDialog","ref","createBackupFormValid","newBackup","rules","v","required","rows","resources","resourceOptions","multiple","chips","includeVolumes","compress","text","createBackup","creatingBackup","loading","restoreDialog","selectedBackup","dense","restoreOptions","stopContainers","restoreBackup","restoringBackup","deleteDialog","deleteBackup","data","value","sortable","align","computed","isAuthenticated","token","created","this","fetchBackups","methods","setTimeout","id","dateString","date","Date","toLocaleString","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","$refs","createBackupForm","validate","newBackupId","now","toISOString","unshift","index","findIndex","b","random","$forceUpdate","backup","$emit","message","filter","__exports__","render"],"sourceRoot":""}