{"version":3,"file":"js/967.f0f37484.js","mappings":"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","sources":["webpack://dockerforge-web-ui/./src/views/monitoring/MonitoringDashboard.vue","webpack://dockerforge-web-ui/./src/views/monitoring/MonitoringDashboard.vue?a4b2"],"sourcesContent":["<template>\n  <div class=\"monitoring-dashboard\">\n    <h1 class=\"text-h4 mb-4\">Monitoring Dashboard</h1>\n\n    <!-- Loading State -->\n    <div v-if=\"loading\" class=\"d-flex justify-center align-center my-5\">\n      <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\n    </div>\n\n    <!-- Error State -->\n    <v-alert v-else-if=\"error\" type=\"error\" class=\"mb-4\">\n      {{ error }}\n    </v-alert>\n\n    <!-- Dashboard Content -->\n    <template v-else>\n      <!-- System Overview -->\n      <v-row>\n        <v-col cols=\"12\" md=\"3\">\n          <v-card class=\"mb-4\">\n            <v-card-title class=\"headline\">\n              <v-icon left color=\"primary\">mdi-cpu-64-bit</v-icon>\n              CPU Usage\n            </v-card-title>\n            <v-card-text class=\"text-center\">\n              <v-progress-circular\n                :rotate=\"-90\"\n                :size=\"100\"\n                :width=\"15\"\n                :value=\"systemMetrics.cpu_usage\"\n                :color=\"getResourceColor(systemMetrics.cpu_usage)\"\n              >\n                <span class=\"text-h5\">{{ systemMetrics.cpu_usage }}%</span>\n              </v-progress-circular>\n              <div class=\"mt-2\">\n                <small>{{ systemMetrics.cpu_cores }} Cores</small>\n              </div>\n            </v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"3\">\n          <v-card class=\"mb-4\">\n            <v-card-title class=\"headline\">\n              <v-icon left color=\"green\">mdi-memory</v-icon>\n              Memory Usage\n            </v-card-title>\n            <v-card-text class=\"text-center\">\n              <v-progress-circular\n                :rotate=\"-90\"\n                :size=\"100\"\n                :width=\"15\"\n                :value=\"systemMetrics.memory_usage_percent\"\n                :color=\"getResourceColor(systemMetrics.memory_usage_percent)\"\n              >\n                <span class=\"text-h5\">{{ systemMetrics.memory_usage_percent }}%</span>\n              </v-progress-circular>\n              <div class=\"mt-2\">\n                <small>{{ formatSize(systemMetrics.memory_used) }} / {{ formatSize(systemMetrics.memory_total) }}</small>\n              </div>\n            </v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"3\">\n          <v-card class=\"mb-4\">\n            <v-card-title class=\"headline\">\n              <v-icon left color=\"blue\">mdi-harddisk</v-icon>\n              Disk Usage\n            </v-card-title>\n            <v-card-text class=\"text-center\">\n              <v-progress-circular\n                :rotate=\"-90\"\n                :size=\"100\"\n                :width=\"15\"\n                :value=\"systemMetrics.disk_usage_percent\"\n                :color=\"getResourceColor(systemMetrics.disk_usage_percent)\"\n              >\n                <span class=\"text-h5\">{{ systemMetrics.disk_usage_percent }}%</span>\n              </v-progress-circular>\n              <div class=\"mt-2\">\n                <small>{{ formatSize(systemMetrics.disk_used) }} / {{ formatSize(systemMetrics.disk_total) }}</small>\n              </div>\n            </v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"3\">\n          <v-card class=\"mb-4\">\n            <v-card-title class=\"headline\">\n              <v-icon left color=\"purple\">mdi-docker</v-icon>\n              Docker Stats\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"6\" class=\"text-center\">\n                  <div class=\"text-h5\">{{ containerStats.running }}</div>\n                  <div class=\"text-subtitle-1 success--text\">Running</div>\n                </v-col>\n                <v-col cols=\"6\" class=\"text-center\">\n                  <div class=\"text-h5\">{{ containerStats.total }}</div>\n                  <div class=\"text-subtitle-1\">Total</div>\n                </v-col>\n              </v-row>\n              <v-divider class=\"my-2\"></v-divider>\n              <v-row>\n                <v-col cols=\"6\" class=\"text-center\">\n                  <div class=\"text-h5\">{{ imageStats.count }}</div>\n                  <div class=\"text-subtitle-1\">Images</div>\n                </v-col>\n                <v-col cols=\"6\" class=\"text-center\">\n                  <div class=\"text-h5\">{{ volumeStats.count }}</div>\n                  <div class=\"text-subtitle-1\">Volumes</div>\n                </v-col>\n              </v-row>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n\n      <!-- Resource Usage Charts -->\n      <v-row>\n        <v-col cols=\"12\" md=\"6\">\n          <v-card class=\"mb-4\">\n            <v-card-title>\n              CPU Usage History\n              <v-spacer></v-spacer>\n              <v-btn-toggle v-model=\"cpuTimeRange\" mandatory>\n                <v-btn small value=\"1h\">1h</v-btn>\n                <v-btn small value=\"6h\">6h</v-btn>\n                <v-btn small value=\"24h\">24h</v-btn>\n                <v-btn small value=\"7d\">7d</v-btn>\n              </v-btn-toggle>\n            </v-card-title>\n            <v-card-text>\n              <canvas id=\"cpuChart\" height=\"250\"></canvas>\n            </v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-card class=\"mb-4\">\n            <v-card-title>\n              Memory Usage History\n              <v-spacer></v-spacer>\n              <v-btn-toggle v-model=\"memoryTimeRange\" mandatory>\n                <v-btn small value=\"1h\">1h</v-btn>\n                <v-btn small value=\"6h\">6h</v-btn>\n                <v-btn small value=\"24h\">24h</v-btn>\n                <v-btn small value=\"7d\">7d</v-btn>\n              </v-btn-toggle>\n            </v-card-title>\n            <v-card-text>\n              <canvas id=\"memoryChart\" height=\"250\"></canvas>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n\n      <!-- Container Resource Usage -->\n      <h2 class=\"text-h5 mb-3\">Container Resource Usage</h2>\n      <v-card class=\"mb-4\">\n        <v-data-table\n          :headers=\"containerHeaders\"\n          :items=\"containerResources\"\n          :items-per-page=\"5\"\n          :sort-by=\"['cpu_percent']\"\n          :sort-desc=\"[true]\"\n          class=\"elevation-1\"\n        >\n          <!-- Name Column -->\n          <template v-slot:item.name=\"{ item }\">\n            <router-link :to=\"`/containers/${item.id}`\" class=\"text-decoration-none\">\n              {{ item.name }}\n            </router-link>\n          </template>\n\n          <!-- CPU Column -->\n          <template v-slot:item.cpu_percent=\"{ item }\">\n            <v-progress-linear\n              :value=\"item.cpu_percent\"\n              height=\"20\"\n              :color=\"getResourceColor(item.cpu_percent)\"\n              striped\n            >\n              <template v-slot:default>\n                <strong>{{ item.cpu_percent.toFixed(1) }}%</strong>\n              </template>\n            </v-progress-linear>\n          </template>\n\n          <!-- Memory Column -->\n          <template v-slot:item.memory_percent=\"{ item }\">\n            <v-progress-linear\n              :value=\"item.memory_percent\"\n              height=\"20\"\n              :color=\"getResourceColor(item.memory_percent)\"\n              striped\n            >\n              <template v-slot:default>\n                <strong>{{ item.memory_percent.toFixed(1) }}%</strong>\n              </template>\n            </v-progress-linear>\n            <div class=\"text-caption\">\n              {{ formatSize(item.memory_usage) }}\n            </div>\n          </template>\n\n          <!-- Network Column -->\n          <template v-slot:item.network=\"{ item }\">\n            <div>\n              <v-icon small color=\"success\">mdi-arrow-down</v-icon>\n              {{ formatSize(item.network_rx) }}/s\n            </div>\n            <div>\n              <v-icon small color=\"info\">mdi-arrow-up</v-icon>\n              {{ formatSize(item.network_tx) }}/s\n            </div>\n          </template>\n\n          <!-- Disk Column -->\n          <template v-slot:item.disk=\"{ item }\">\n            <div>\n              <v-icon small color=\"success\">mdi-arrow-down</v-icon>\n              {{ formatSize(item.disk_read) }}/s\n            </div>\n            <div>\n              <v-icon small color=\"info\">mdi-arrow-up</v-icon>\n              {{ formatSize(item.disk_write) }}/s\n            </div>\n          </template>\n\n          <!-- Actions Column -->\n          <template v-slot:item.actions=\"{ item }\">\n            <v-btn\n              icon\n              small\n              :to=\"`/containers/${item.id}`\"\n              title=\"View Details\"\n            >\n              <v-icon small>mdi-eye</v-icon>\n            </v-btn>\n            <v-btn\n              icon\n              small\n              @click=\"showContainerMetrics(item)\"\n              title=\"View Metrics\"\n            >\n              <v-icon small>mdi-chart-line</v-icon>\n            </v-btn>\n          </template>\n        </v-data-table>\n      </v-card>\n\n      <!-- Alerts and Anomalies -->\n      <h2 class=\"text-h5 mb-3\">Alerts and Anomalies</h2>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-expansion-panels>\n            <v-expansion-panel\n              v-for=\"(alert, i) in alerts\"\n              :key=\"i\"\n            >\n              <v-expansion-panel-header>\n                <div class=\"d-flex align-center\">\n                  <v-icon\n                    :color=\"getAlertSeverityColor(alert.severity)\"\n                    class=\"mr-2\"\n                  >\n                    mdi-alert-circle\n                  </v-icon>\n                  <span>{{ alert.title }}</span>\n                  <v-chip\n                    class=\"ml-2\"\n                    x-small\n                    :color=\"getAlertSeverityColor(alert.severity)\"\n                    text-color=\"white\"\n                  >\n                    {{ alert.severity }}\n                  </v-chip>\n                  <v-spacer></v-spacer>\n                  <span class=\"text-caption\">{{ formatDate(alert.timestamp) }}</span>\n                </div>\n              </v-expansion-panel-header>\n              <v-expansion-panel-content>\n                <p>{{ alert.description }}</p>\n                <div v-if=\"alert.resource\">\n                  <strong>Resource:</strong> {{ alert.resource.name }} ({{ alert.resource.type }})\n                </div>\n                <div v-if=\"alert.metrics && alert.metrics.length > 0\">\n                  <strong>Metrics:</strong>\n                  <ul>\n                    <li v-for=\"(metric, j) in alert.metrics\" :key=\"j\">\n                      {{ metric.name }}: {{ metric.value }} {{ metric.unit }}\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"d-flex mt-2\">\n                  <v-btn\n                    color=\"primary\"\n                    text\n                    small\n                    @click=\"acknowledgeAlert(alert)\"\n                    v-if=\"!alert.acknowledged\"\n                  >\n                    <v-icon left small>mdi-check</v-icon>\n                    Acknowledge\n                  </v-btn>\n                  <v-btn\n                    color=\"success\"\n                    text\n                    small\n                    @click=\"resolveAlert(alert)\"\n                    v-if=\"!alert.resolved\"\n                  >\n                    <v-icon left small>mdi-check-all</v-icon>\n                    Resolve\n                  </v-btn>\n                  <v-btn\n                    color=\"info\"\n                    text\n                    small\n                    :to=\"getResourceLink(alert.resource)\"\n                    v-if=\"alert.resource\"\n                  >\n                    <v-icon left small>mdi-eye</v-icon>\n                    View Resource\n                  </v-btn>\n                </div>\n              </v-expansion-panel-content>\n            </v-expansion-panel>\n          </v-expansion-panels>\n\n          <v-card v-if=\"alerts.length === 0\" class=\"text-center pa-5\">\n            <v-icon size=\"64\" color=\"success\">mdi-check-circle</v-icon>\n            <h3 class=\"text-h5 mt-4\">No active alerts</h3>\n            <p class=\"text-body-1 mt-2\">\n              All systems are operating normally\n            </p>\n          </v-card>\n        </v-col>\n      </v-row>\n    </template>\n\n    <!-- Container Metrics Dialog -->\n    <v-dialog v-model=\"containerMetricsDialog\" max-width=\"800\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          {{ selectedContainer?.name }} Metrics\n          <v-spacer></v-spacer>\n          <v-btn icon @click=\"containerMetricsDialog = false\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-card-title>\n        <v-card-text>\n          <v-tabs v-model=\"activeMetricTab\">\n            <v-tab>CPU</v-tab>\n            <v-tab>Memory</v-tab>\n            <v-tab>Network</v-tab>\n            <v-tab>Disk</v-tab>\n          </v-tabs>\n          <v-tabs-items v-model=\"activeMetricTab\">\n            <v-tab-item>\n              <div class=\"pa-4\">\n                <canvas id=\"containerCpuChart\" height=\"250\"></canvas>\n              </div>\n            </v-tab-item>\n            <v-tab-item>\n              <div class=\"pa-4\">\n                <canvas id=\"containerMemoryChart\" height=\"250\"></canvas>\n              </div>\n            </v-tab-item>\n            <v-tab-item>\n              <div class=\"pa-4\">\n                <canvas id=\"containerNetworkChart\" height=\"250\"></canvas>\n              </div>\n            </v-tab-item>\n            <v-tab-item>\n              <div class=\"pa-4\">\n                <canvas id=\"containerDiskChart\" height=\"250\"></canvas>\n              </div>\n            </v-tab-item>\n          </v-tabs-items>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"containerMetricsDialog = false\">\n            Close\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n// In a real implementation, you would import Chart.js\n// import Chart from 'chart.js';\n\nexport default {\n  name: 'MonitoringDashboard',\n  data() {\n    return {\n      loading: true,\n      error: null,\n      refreshInterval: null,\n      systemMetrics: {\n        cpu_usage: 0,\n        cpu_cores: 0,\n        memory_usage_percent: 0,\n        memory_used: 0,\n        memory_total: 0,\n        disk_usage_percent: 0,\n        disk_used: 0,\n        disk_total: 0,\n      },\n      containerStats: {\n        running: 0,\n        total: 0,\n      },\n      imageStats: {\n        count: 0,\n      },\n      volumeStats: {\n        count: 0,\n      },\n      cpuTimeRange: '1h',\n      memoryTimeRange: '1h',\n      containerHeaders: [\n        { text: 'Name', value: 'name', sortable: true },\n        { text: 'CPU', value: 'cpu_percent', sortable: true },\n        { text: 'Memory', value: 'memory_percent', sortable: true },\n        { text: 'Network I/O', value: 'network', sortable: false },\n        { text: 'Disk I/O', value: 'disk', sortable: false },\n        { text: 'Actions', value: 'actions', sortable: false, align: 'center' },\n      ],\n      containerResources: [],\n      alerts: [],\n      containerMetricsDialog: false,\n      selectedContainer: null,\n      activeMetricTab: 0,\n      charts: {\n        cpu: null,\n        memory: null,\n        containerCpu: null,\n        containerMemory: null,\n        containerNetwork: null,\n        containerDisk: null,\n      },\n    };\n  },\n  computed: {\n    ...mapGetters({\n      isAuthenticated: 'auth/isAuthenticated',\n      token: 'auth/token',\n    }),\n  },\n  watch: {\n    cpuTimeRange() {\n      this.updateCpuChart();\n    },\n    memoryTimeRange() {\n      this.updateMemoryChart();\n    },\n  },\n  created() {\n    this.fetchMonitoringData();\n  },\n  mounted() {\n    // Set up auto-refresh every 30 seconds\n    this.refreshInterval = setInterval(() => {\n      this.fetchMonitoringData(false);\n    }, 30000);\n  },\n  beforeDestroy() {\n    // Clear the refresh interval when component is destroyed\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n  },\n  methods: {\n    async fetchMonitoringData(showLoading = true) {\n      if (showLoading) {\n        this.loading = true;\n      }\n      this.error = null;\n\n      try {\n        // In a real implementation, this would call the API\n        // const response = await axios.get('/api/monitoring/dashboard', {\n        //   headers: { Authorization: `Bearer ${this.token}` },\n        // });\n        // this.systemMetrics = response.data.system_metrics;\n        // this.containerStats = response.data.container_stats;\n        // this.imageStats = response.data.image_stats;\n        // this.volumeStats = response.data.volume_stats;\n        // this.containerResources = response.data.container_resources;\n        // this.alerts = response.data.alerts;\n        \n        // Mock data for development\n        setTimeout(() => {\n          this.systemMetrics = {\n            cpu_usage: 35.2,\n            cpu_cores: 8,\n            memory_usage_percent: 42.7,\n            memory_used: 1024 * 1024 * 1024 * 6.8, // 6.8 GB\n            memory_total: 1024 * 1024 * 1024 * 16, // 16 GB\n            disk_usage_percent: 68.3,\n            disk_used: 1024 * 1024 * 1024 * 205, // 205 GB\n            disk_total: 1024 * 1024 * 1024 * 300, // 300 GB\n          };\n          \n          this.containerStats = {\n            running: 7,\n            total: 12,\n          };\n          \n          this.imageStats = {\n            count: 23,\n          };\n          \n          this.volumeStats = {\n            count: 8,\n          };\n          \n          this.containerResources = [\n            {\n              id: 'c1',\n              name: 'web-server',\n              cpu_percent: 12.5,\n              memory_percent: 8.2,\n              memory_usage: 1024 * 1024 * 256, // 256 MB\n              network_rx: 1024 * 1024 * 1.2, // 1.2 MB/s\n              network_tx: 1024 * 1024 * 3.5, // 3.5 MB/s\n              disk_read: 1024 * 1024 * 0.5, // 0.5 MB/s\n              disk_write: 1024 * 1024 * 0.2, // 0.2 MB/s\n            },\n            {\n              id: 'c2',\n              name: 'api-service',\n              cpu_percent: 28.7,\n              memory_percent: 15.3,\n              memory_usage: 1024 * 1024 * 512, // 512 MB\n              network_rx: 1024 * 1024 * 2.8, // 2.8 MB/s\n              network_tx: 1024 * 1024 * 1.7, // 1.7 MB/s\n              disk_read: 1024 * 1024 * 0.3, // 0.3 MB/s\n              disk_write: 1024 * 1024 * 0.8, // 0.8 MB/s\n            },\n            {\n              id: 'c3',\n              name: 'database',\n              cpu_percent: 45.2,\n              memory_percent: 62.8,\n              memory_usage: 1024 * 1024 * 1024 * 2.5, // 2.5 GB\n              network_rx: 1024 * 1024 * 0.8, // 0.8 MB/s\n              network_tx: 1024 * 1024 * 0.6, // 0.6 MB/s\n              disk_read: 1024 * 1024 * 5.2, // 5.2 MB/s\n              disk_write: 1024 * 1024 * 3.1, // 3.1 MB/s\n            },\n            {\n              id: 'c4',\n              name: 'cache',\n              cpu_percent: 5.3,\n              memory_percent: 28.1,\n              memory_usage: 1024 * 1024 * 768, // 768 MB\n              network_rx: 1024 * 1024 * 4.5, // 4.5 MB/s\n              network_tx: 1024 * 1024 * 3.2, // 3.2 MB/s\n              disk_read: 1024 * 1024 * 0.1, // 0.1 MB/s\n              disk_write: 1024 * 1024 * 0.05, // 0.05 MB/s\n            },\n            {\n              id: 'c5',\n              name: 'worker',\n              cpu_percent: 78.9,\n              memory_percent: 42.6,\n              memory_usage: 1024 * 1024 * 896, // 896 MB\n              network_rx: 1024 * 1024 * 0.3, // 0.3 MB/s\n              network_tx: 1024 * 1024 * 0.2, // 0.2 MB/s\n              disk_read: 1024 * 1024 * 2.1, // 2.1 MB/s\n              disk_write: 1024 * 1024 * 1.8, // 1.8 MB/s\n            },\n          ];\n          \n          this.alerts = [\n            {\n              id: 'a1',\n              title: 'High CPU Usage',\n              description: 'Container \"worker\" is using excessive CPU resources (78.9%). This may indicate a performance issue or resource contention.',\n              severity: 'warning',\n              timestamp: '2025-03-17T05:45:00Z',\n              acknowledged: false,\n              resolved: false,\n              resource: {\n                type: 'container',\n                id: 'c5',\n                name: 'worker',\n              },\n              metrics: [\n                {\n                  name: 'CPU Usage',\n                  value: 78.9,\n                  unit: '%',\n                },\n              ],\n            },\n            {\n              id: 'a2',\n              title: 'Memory Leak Detected',\n              description: 'Container \"database\" shows a steady increase in memory usage over the past 6 hours, indicating a possible memory leak.',\n              severity: 'critical',\n              timestamp: '2025-03-17T04:30:00Z',\n              acknowledged: true,\n              resolved: false,\n              resource: {\n                type: 'container',\n                id: 'c3',\n                name: 'database',\n              },\n              metrics: [\n                {\n                  name: 'Memory Usage',\n                  value: 62.8,\n                  unit: '%',\n                },\n                {\n                  name: 'Memory Growth Rate',\n                  value: 5.2,\n                  unit: '%/hour',\n                },\n              ],\n            },\n            {\n              id: 'a3',\n              title: 'Disk Space Warning',\n              description: 'Host system is running low on disk space (68.3% used). Consider cleaning up unused images and volumes.',\n              severity: 'warning',\n              timestamp: '2025-03-17T03:15:00Z',\n              acknowledged: false,\n              resolved: false,\n              resource: {\n                type: 'host',\n                id: 'host',\n                name: 'Docker Host',\n              },\n              metrics: [\n                {\n                  name: 'Disk Usage',\n                  value: 68.3,\n                  unit: '%',\n                },\n              ],\n            },\n          ];\n          \n          this.loading = false;\n          \n          // Initialize charts after data is loaded\n          this.$nextTick(() => {\n            this.initCharts();\n          });\n        }, 1000);\n      } catch (error) {\n        this.error = 'Failed to load monitoring data. Please try again.';\n        this.loading = false;\n      }\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    },\n    formatSize(bytes) {\n      if (bytes === 0) return '0 Bytes';\n      \n      const k = 1024;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      \n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    },\n    getResourceColor(percent) {\n      if (percent >= 90) {\n        return 'error';\n      } else if (percent >= 70) {\n        return 'warning';\n      } else if (percent >= 50) {\n        return 'info';\n      } else {\n        return 'success';\n      }\n    },\n    getAlertSeverityColor(severity) {\n      switch (severity) {\n        case 'critical':\n          return 'error';\n        case 'warning':\n          return 'warning';\n        case 'info':\n          return 'info';\n        default:\n          return 'grey';\n      }\n    },\n    getResourceLink(resource) {\n      if (!resource) return '#';\n      \n      switch (resource.type) {\n        case 'container':\n          return `/containers/${resource.id}`;\n        case 'image':\n          return `/images/${resource.id}`;\n        case 'volume':\n          return `/volumes/${resource.id}`;\n        case 'network':\n          return `/networks/${resource.id}`;\n        default:\n          return '#';\n      }\n    },\n    showContainerMetrics(container) {\n      this.selectedContainer = container;\n      this.containerMetricsDialog = true;\n      \n      // Initialize container charts after dialog is shown\n      this.$nextTick(() => {\n        this.initContainerCharts();\n      });\n    },\n    acknowledgeAlert(alert) {\n      // In a real implementation, this would call the API\n      // await axios.post(`/api/monitoring/alerts/${alert.id}/acknowledge`, {}, {\n      //   headers: { Authorization: `Bearer ${this.token}` },\n      // });\n      \n      // Mock implementation\n      alert.acknowledged = true;\n    },\n    resolveAlert(alert) {\n      // In a real implementation, this would call the API\n      // await axios.post(`/api/monitoring/alerts/${alert.id}/resolve`, {}, {\n      //   headers: { Authorization: `Bearer ${this.token}` },\n      // });\n      \n      // Mock implementation\n      alert.resolved = true;\n      \n      // Remove the alert from the list after a short delay\n      setTimeout(() => {\n        this.alerts = this.alerts.filter(a => a.id !== alert.id);\n      }, 500);\n    },\n    initCharts() {\n      // In a real implementation, this would initialize Chart.js charts\n      // This is a mock implementation that doesn't actually create charts\n      console.log('Charts would be initialized here in a real implementation');\n      \n      // Mock CPU chart data\n      const cpuData = {\n        labels: Array.from({ length: 24 }, (_, i) => `${23 - i}h ago`),\n        datasets: [\n          {\n            label: 'CPU Usage (%)',\n            data: Array.from({ length: 24 }, () => Math.random() * 50 + 20),\n            borderColor: '#1976D2',\n            backgroundColor: 'rgba(25, 118, 210, 0.1)',\n            fill: true,\n          },\n        ],\n      };\n      \n      // Mock Memory chart data\n      const memoryData = {\n        labels: Array.from({ length: 24 }, (_, i) => `${23 - i}h ago`),\n        datasets: [\n          {\n            label: 'Memory Usage (%)',\n            data: Array.from({ length: 24 }, () => Math.random() * 30 + 30),\n            borderColor: '#4CAF50',\n            backgroundColor: 'rgba(76, 175, 80, 0.1)',\n            fill: true,\n          },\n        ],\n      };\n      \n      // In a real implementation, we would create actual Chart.js instances\n      this.charts.cpu = cpuData;\n      this.charts.memory = memoryData;\n    },\n    updateCpuChart() {\n      // In a real implementation, this would update the CPU chart with new data\n      console.log(`CPU chart would be updated with time range: ${this.cpuTimeRange}`);\n    },\n    updateMemoryChart() {\n      // In a real implementation, this would update the Memory chart with new data\n      console.log(`Memory chart would be updated with time range: ${this.memoryTimeRange}`);\n    },\n    initContainerCharts() {\n      // In a real implementation, this would initialize container-specific charts\n      console.log('Container charts would be initialized here in a real implementation');\n      \n      // Mock container chart data\n      const containerCpuData = {\n        labels: Array.from({ length: 24 }, (_, i) => `${23 - i}h ago`),\n        datasets: [\n          {\n            label: 'CPU Usage (%)',\n            data: Array.from({ length: 24 }, () => Math.random() * 50 + 20),\n            borderColor: '#1976D2',\n            backgroundColor: 'rgba(25, 118, 210, 0.1)',\n            fill: true,\n          },\n        ],\n      };\n      \n      const containerMemoryData = {\n        labels: Array.from({ length: 24 }, (_, i) => `${23 - i}h ago`),\n        datasets: [\n          {\n            label: 'Memory Usage (%)',\n            data: Array.from({ length: 24 }, () => Math.random() * 30 + 30),\n            borderColor: '#4CAF50',\n            backgroundColor: 'rgba(76, 175, 80, 0.1)',\n            fill: true,\n          },\n        ],\n      };\n      \n      const containerNetworkData = {\n        labels: Array.from({ length: 24 }, (_, i) => `${23 - i}h ago`),\n        datasets: [\n          {\n            label: 'Network RX (MB/s)',\n            data: Array.from({ length: 24 }, () => Math.random() * 3 + 1),\n            borderColor: '#2196F3',\n            backgroundColor: 'rgba(33, 150, 243, 0.1)',\n            fill: true,\n          },\n          {\n            label: 'Network TX (MB/s)',\n            data: Array.from({ length: 24 }, () => Math.random() * 2 + 0.5),\n            borderColor: '#FF9800',\n            backgroundColor: 'rgba(255, 152, 0, 0.1)',\n            fill: true,\n          },\n        ],\n      };\n      \n      const containerDiskData = {\n        labels: Array.from({ length: 24 }, (_, i) => `${23 - i}h ago`),\n        datasets: [\n          {\n            label: 'Disk Read (MB/s)',\n            data: Array.from({ length: 24 }, () => Math.random() * 5 + 0.5),\n            borderColor: '#4CAF50',\n            backgroundColor: 'rgba(76, 175, 80, 0.1)',\n            fill: true,\n          },\n          {\n            label: 'Disk Write (MB/s)',\n            data: Array.from({ length: 24 }, () => Math.random() * 3 + 0.2),\n            borderColor: '#9C27B0',\n            backgroundColor: 'rgba(156, 39, 176, 0.1)',\n            fill: true,\n          },\n        ],\n      };\n      \n      // In a real implementation, we would create actual Chart.js instances\n      this.charts.containerCpu = containerCpuData;\n      this.charts.containerMemory = containerMemoryData;\n      this.charts.containerNetwork = containerNetworkData;\n      this.charts.containerDisk = containerDiskData;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.monitoring-dashboard {\n  padding: 16px;\n}\n</style>\n","import { render } from \"./MonitoringDashboard.vue?vue&type=template&id=558374b5&scoped=true\"\nimport script from \"./MonitoringDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./MonitoringDashboard.vue?vue&type=script&lang=js\"\n\nimport \"./MonitoringDashboard.vue?vue&type=style&index=0&id=558374b5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-558374b5\"]])\n\nexport default __exports__"],"names":["class","indeterminate","color","type","error","cols","md","left","rotate","size","width","value","systemMetrics","cpu_usage","getResourceColor","cpu_cores","memory_usage_percent","formatSize","memory_used","memory_total","disk_usage_percent","disk_used","disk_total","containerStats","running","total","imageStats","count","volumeStats","cpuTimeRange","mandatory","small","id","height","memoryTimeRange","headers","containerHeaders","items","containerResources","item","to","name","cpu_percent","striped","default","toFixed","memory_percent","memory_usage","network_rx","network_tx","disk_read","disk_write","icon","title","showContainerMetrics","alerts","alert","i","key","getAlertSeverityColor","severity","formatDate","timestamp","description","resource","metrics","length","metric","j","unit","acknowledged","text","acknowledgeAlert","resolved","resolveAlert","getResourceLink","containerMetricsDialog","selectedContainer","activeMetricTab","data","loading","refreshInterval","sortable","align","charts","cpu","memory","containerCpu","containerMemory","containerNetwork","containerDisk","computed","isAuthenticated","token","watch","this","updateCpuChart","updateMemoryChart","created","fetchMonitoringData","mounted","setInterval","beforeDestroy","clearInterval","methods","showLoading","setTimeout","$nextTick","initCharts","dateString","date","Date","toLocaleString","bytes","k","sizes","Math","floor","log","parseFloat","pow","percent","container","initContainerCharts","filter","a","console","cpuData","labels","Array","from","_","datasets","label","random","borderColor","backgroundColor","fill","memoryData","containerCpuData","containerMemoryData","containerNetworkData","containerDiskData","__exports__","render"],"sourceRoot":""}