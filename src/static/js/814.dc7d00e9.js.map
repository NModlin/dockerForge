{"version":3,"file":"js/814.dc7d00e9.js","mappings":"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","sources":["webpack://dockerforge-web-ui/./src/views/networks/NetworkDetail.vue","webpack://dockerforge-web-ui/./src/views/networks/NetworkDetail.vue?4656"],"sourcesContent":["<template>\n  <div class=\"network-detail\">\n    <v-row>\n      <v-col cols=\"12\">\n        <v-btn text to=\"/networks\" class=\"mb-4\">\n          <v-icon left>mdi-arrow-left</v-icon>\n          Back to Networks\n        </v-btn>\n      </v-col>\n    </v-row>\n\n    <!-- Loading State -->\n    <div v-if=\"loading\" class=\"d-flex justify-center align-center my-5\">\n      <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\n    </div>\n\n    <!-- Error State -->\n    <v-alert v-else-if=\"error\" type=\"error\" class=\"mb-4\">\n      {{ error }}\n    </v-alert>\n\n    <!-- Network Not Found -->\n    <v-alert v-else-if=\"!network\" type=\"warning\" class=\"mb-4\">\n      Network not found\n    </v-alert>\n\n    <!-- Network Details -->\n    <template v-else>\n      <v-row>\n        <v-col cols=\"12\" md=\"8\">\n          <v-card class=\"mb-4\">\n            <v-card-title class=\"headline\">\n              {{ network.name }}\n              <v-chip\n                class=\"ml-2\"\n                :color=\"getScopeColor(network.scope)\"\n                text-color=\"white\"\n                small\n              >\n                {{ network.scope }}\n              </v-chip>\n              <v-spacer></v-spacer>\n              <v-btn\n                color=\"error\"\n                text\n                @click=\"showDeleteDialog\"\n                :disabled=\"isDefaultNetwork\"\n              >\n                <v-icon left>mdi-delete</v-icon>\n                Delete\n              </v-btn>\n            </v-card-title>\n            <v-card-text>\n              <v-simple-table>\n                <template v-slot:default>\n                  <tbody>\n                    <tr>\n                      <td class=\"font-weight-bold\">ID</td>\n                      <td>{{ network.id }}</td>\n                    </tr>\n                    <tr>\n                      <td class=\"font-weight-bold\">Driver</td>\n                      <td>{{ network.driver }}</td>\n                    </tr>\n                    <tr>\n                      <td class=\"font-weight-bold\">Subnet</td>\n                      <td>{{ network.subnet }}</td>\n                    </tr>\n                    <tr>\n                      <td class=\"font-weight-bold\">Gateway</td>\n                      <td>{{ network.gateway || 'N/A' }}</td>\n                    </tr>\n                    <tr>\n                      <td class=\"font-weight-bold\">IP Range</td>\n                      <td>{{ network.ip_range || 'N/A' }}</td>\n                    </tr>\n                    <tr>\n                      <td class=\"font-weight-bold\">Internal</td>\n                      <td>{{ network.internal ? 'Yes' : 'No' }}</td>\n                    </tr>\n                    <tr>\n                      <td class=\"font-weight-bold\">Created</td>\n                      <td>{{ formatDate(network.created_at) }}</td>\n                    </tr>\n                    <tr v-if=\"network.labels && Object.keys(network.labels).length > 0\">\n                      <td class=\"font-weight-bold\">Labels</td>\n                      <td>\n                        <v-chip\n                          v-for=\"(value, key) in network.labels\"\n                          :key=\"key\"\n                          class=\"mr-2 mb-2\"\n                          small\n                        >\n                          {{ key }}: {{ value }}\n                        </v-chip>\n                      </td>\n                    </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n            </v-card-text>\n          </v-card>\n\n          <!-- Network Options -->\n          <v-card v-if=\"network.options && Object.keys(network.options).length > 0\" class=\"mb-4\">\n            <v-card-title>Network Options</v-card-title>\n            <v-card-text>\n              <v-simple-table>\n                <template v-slot:default>\n                  <thead>\n                    <tr>\n                      <th>Option</th>\n                      <th>Value</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"(value, key) in network.options\" :key=\"key\">\n                      <td>{{ key }}</td>\n                      <td>{{ value }}</td>\n                    </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n            </v-card-text>\n          </v-card>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"4\">\n          <!-- Connected Containers -->\n          <v-card>\n            <v-card-title>Connected Containers</v-card-title>\n            <v-card-text v-if=\"connectedContainers.length === 0\">\n              <p class=\"text-center\">No containers are connected to this network</p>\n            </v-card-text>\n            <v-list v-else dense>\n              <v-list-item\n                v-for=\"container in connectedContainers\"\n                :key=\"container.id\"\n                :to=\"`/containers/${container.id}`\"\n              >\n                <v-list-item-icon>\n                  <v-icon\n                    :color=\"container.status === 'running' ? 'success' : 'grey'\"\n                  >\n                    mdi-docker\n                  </v-icon>\n                </v-list-item-icon>\n                <v-list-item-content>\n                  <v-list-item-title>{{ container.name }}</v-list-item-title>\n                  <v-list-item-subtitle>\n                    {{ container.ip_address || 'No IP assigned' }}\n                  </v-list-item-subtitle>\n                </v-list-item-content>\n              </v-list-item>\n            </v-list>\n          </v-card>\n        </v-col>\n      </v-row>\n    </template>\n\n    <!-- Delete Confirmation Dialog -->\n    <v-dialog v-model=\"deleteDialog\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"headline\">Delete Network</v-card-title>\n        <v-card-text>\n          Are you sure you want to delete the network <strong>{{ network?.name }}</strong>?\n          This action cannot be undone.\n          <v-alert\n            v-if=\"connectedContainers.length > 0\"\n            type=\"warning\"\n            class=\"mt-3\"\n            dense\n          >\n            This network is currently used by {{ connectedContainers.length }} container(s).\n            Deleting it may cause those containers to lose connectivity.\n          </v-alert>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey darken-1\" text @click=\"deleteDialog = false\">\n            Cancel\n          </v-btn>\n          <v-btn color=\"red darken-1\" text @click=\"deleteNetwork\">\n            Delete\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex';\n\nexport default {\n  name: 'NetworkDetail',\n  data() {\n    return {\n      loading: true,\n      error: null,\n      network: null,\n      connectedContainers: [],\n      deleteDialog: false,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      isAuthenticated: 'auth/isAuthenticated',\n      token: 'auth/token',\n    }),\n    isDefaultNetwork() {\n      if (!this.network) return false;\n      return ['bridge', 'host', 'none'].includes(this.network.name);\n    },\n  },\n  created() {\n    this.fetchNetworkDetails();\n  },\n  methods: {\n    async fetchNetworkDetails() {\n      this.loading = true;\n      this.error = null;\n\n      try {\n        // In a real implementation, this would call the API\n        // const response = await axios.get(`/api/networks/${this.$route.params.id}`, {\n        //   headers: { Authorization: `Bearer ${this.token}` },\n        // });\n        // this.network = response.data;\n        \n        // Mock data for development\n        setTimeout(() => {\n          // Simulate different networks based on the ID parameter\n          if (this.$route.params.id === 'n1') {\n            this.network = {\n              id: 'n1',\n              name: 'bridge',\n              driver: 'bridge',\n              subnet: '172.17.0.0/16',\n              gateway: '172.17.0.1',\n              scope: 'local',\n              internal: false,\n              created_at: '2025-03-15T10:00:00Z',\n              options: {\n                'com.docker.network.bridge.default_bridge': 'true',\n                'com.docker.network.bridge.enable_icc': 'true',\n                'com.docker.network.bridge.enable_ip_masquerade': 'true',\n                'com.docker.network.bridge.host_binding_ipv4': '0.0.0.0',\n                'com.docker.network.bridge.name': 'docker0',\n                'com.docker.network.driver.mtu': '1500',\n              },\n            };\n            \n            this.connectedContainers = [\n              {\n                id: 'c1',\n                name: 'nginx',\n                status: 'running',\n                ip_address: '172.17.0.2',\n              },\n              {\n                id: 'c2',\n                name: 'redis',\n                status: 'running',\n                ip_address: '172.17.0.3',\n              },\n            ];\n          } else if (this.$route.params.id === 'n4') {\n            this.network = {\n              id: 'n4',\n              name: 'app_network',\n              driver: 'bridge',\n              subnet: '172.18.0.0/16',\n              gateway: '172.18.0.1',\n              scope: 'local',\n              internal: false,\n              created_at: '2025-03-16T09:00:00Z',\n              labels: {\n                'com.example.environment': 'development',\n                'com.example.project': 'dockerforge',\n              },\n            };\n            \n            this.connectedContainers = [\n              {\n                id: 'c3',\n                name: 'postgres',\n                status: 'stopped',\n                ip_address: '172.18.0.2',\n              },\n            ];\n          } else if (this.$route.params.id === 'n5') {\n            this.network = {\n              id: 'n5',\n              name: 'overlay_network',\n              driver: 'overlay',\n              subnet: '10.0.0.0/24',\n              gateway: '10.0.0.1',\n              scope: 'swarm',\n              internal: false,\n              created_at: '2025-03-16T08:00:00Z',\n              options: {\n                'com.docker.network.driver.overlay.vxlanid_list': '4097',\n                'com.docker.network.driver.overlay.mtu': '1450',\n              },\n            };\n            \n            this.connectedContainers = [];\n          } else {\n            // Default network for any other ID\n            this.network = {\n              id: this.$route.params.id,\n              name: 'unknown_network',\n              driver: 'bridge',\n              subnet: '192.168.0.0/24',\n              gateway: '192.168.0.1',\n              scope: 'local',\n              internal: false,\n              created_at: '2025-03-16T00:00:00Z',\n            };\n            \n            this.connectedContainers = [];\n          }\n          \n          this.loading = false;\n        }, 1000);\n      } catch (error) {\n        this.error = 'Failed to load network details. Please try again.';\n        this.loading = false;\n      }\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    },\n    getScopeColor(scope) {\n      switch (scope) {\n        case 'swarm':\n          return 'purple';\n        case 'global':\n          return 'blue';\n        case 'local':\n        default:\n          return 'green';\n      }\n    },\n    showDeleteDialog() {\n      this.deleteDialog = true;\n    },\n    async deleteNetwork() {\n      try {\n        // In a real implementation, this would call the API\n        // await axios.delete(`/api/networks/${this.network.id}`, {\n        //   headers: { Authorization: `Bearer ${this.token}` },\n        // });\n        \n        // Navigate back to networks list\n        this.$router.push('/networks');\n      } catch (error) {\n        this.error = `Failed to delete network ${this.network.name}`;\n        this.deleteDialog = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.network-detail {\n  padding: 16px;\n}\n</style>\n","import { render } from \"./NetworkDetail.vue?vue&type=template&id=67e3625e&scoped=true\"\nimport script from \"./NetworkDetail.vue?vue&type=script&lang=js\"\nexport * from \"./NetworkDetail.vue?vue&type=script&lang=js\"\n\nimport \"./NetworkDetail.vue?vue&type=style&index=0&id=67e3625e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-67e3625e\"]])\n\nexport default __exports__"],"names":["class","cols","text","to","left","indeterminate","color","type","error","network","md","name","getScopeColor","scope","small","showDeleteDialog","disabled","isDefaultNetwork","default","id","driver","subnet","gateway","ip_range","internal","formatDate","created_at","labels","Object","keys","length","value","key","options","connectedContainers","dense","container","status","ip_address","deleteDialog","deleteNetwork","data","loading","computed","isAuthenticated","token","this","includes","created","fetchNetworkDetails","methods","setTimeout","$route","params","dateString","date","Date","toLocaleString","$router","push","__exports__","render"],"sourceRoot":""}