{"version":3,"file":"js/433.10b52574.js","mappings":"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","sources":["webpack://dockerforge-web-ui/./src/views/images/ImageDetail.vue","webpack://dockerforge-web-ui/./src/views/images/ImageDetail.vue?1152"],"sourcesContent":["<template>\n  <div class=\"image-detail\">\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title class=\"headline\">\n              <v-icon large left>mdi-docker</v-icon>\n              Image Details\n              <v-spacer></v-spacer>\n              <v-btn color=\"primary\" @click=\"goBack\">\n                <v-icon left>mdi-arrow-left</v-icon>\n                Back to Images\n              </v-btn>\n            </v-card-title>\n            \n            <v-card-text v-if=\"loading\">\n              <v-skeleton-loader type=\"article\" />\n            </v-card-text>\n            \n            <v-card-text v-else-if=\"!image\">\n              <v-alert type=\"error\">Image not found</v-alert>\n            </v-card-text>\n            \n            <template v-else>\n              <v-card-text>\n                <v-row>\n                  <v-col cols=\"12\" md=\"6\">\n                    <v-list dense>\n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>ID</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.id }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Short ID</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.short_id }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Tags</v-list-item-title>\n                          <v-list-item-subtitle>\n                            <v-chip\n                              v-for=\"tag in image.tags\"\n                              :key=\"tag\"\n                              class=\"ma-1\"\n                              small\n                              color=\"primary\"\n                              text-color=\"white\"\n                            >\n                              {{ tag }}\n                            </v-chip>\n                          </v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Size</v-list-item-title>\n                          <v-list-item-subtitle>{{ formatSize(image.size) }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Created</v-list-item-title>\n                          <v-list-item-subtitle>{{ formatDate(image.created_at) }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                    </v-list>\n                  </v-col>\n                  \n                  <v-col cols=\"12\" md=\"6\">\n                    <v-list dense>\n                      <v-list-item v-if=\"image.author\">\n                        <v-list-item-content>\n                          <v-list-item-title>Author</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.author }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item v-if=\"image.architecture\">\n                        <v-list-item-content>\n                          <v-list-item-title>Architecture</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.architecture }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item v-if=\"image.os\">\n                        <v-list-item-content>\n                          <v-list-item-title>OS</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.os }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item v-if=\"image.digest\">\n                        <v-list-item-content>\n                          <v-list-item-title>Digest</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.digest }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                    </v-list>\n                  </v-col>\n                </v-row>\n              </v-card-text>\n              \n              <v-divider></v-divider>\n              \n              <v-tabs v-model=\"activeTab\" background-color=\"primary\" dark>\n                <v-tab>Labels</v-tab>\n                <v-tab>Environment</v-tab>\n                <v-tab>Ports</v-tab>\n                <v-tab>Volumes</v-tab>\n                <v-tab>Security</v-tab>\n              </v-tabs>\n              \n              <v-tabs-items v-model=\"activeTab\">\n                <!-- Labels Tab -->\n                <v-tab-item>\n                  <v-card flat>\n                    <v-card-text>\n                      <v-simple-table v-if=\"image.labels && Object.keys(image.labels).length > 0\">\n                        <template v-slot:default>\n                          <thead>\n                            <tr>\n                              <th>Key</th>\n                              <th>Value</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for=\"(value, key) in image.labels\" :key=\"key\">\n                              <td>{{ key }}</td>\n                              <td>{{ value }}</td>\n                            </tr>\n                          </tbody>\n                        </template>\n                      </v-simple-table>\n                      <v-alert v-else type=\"info\">No labels found</v-alert>\n                    </v-card-text>\n                  </v-card>\n                </v-tab-item>\n                \n                <!-- Environment Tab -->\n                <v-tab-item>\n                  <v-card flat>\n                    <v-card-text>\n                      <v-simple-table v-if=\"image.env && image.env.length > 0\">\n                        <template v-slot:default>\n                          <thead>\n                            <tr>\n                              <th>Key</th>\n                              <th>Value</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for=\"env in image.env\" :key=\"env.key\">\n                              <td>{{ env.key }}</td>\n                              <td>{{ env.value }}</td>\n                            </tr>\n                          </tbody>\n                        </template>\n                      </v-simple-table>\n                      <v-alert v-else type=\"info\">No environment variables found</v-alert>\n                    </v-card-text>\n                  </v-card>\n                </v-tab-item>\n                \n                <!-- Ports Tab -->\n                <v-tab-item>\n                  <v-card flat>\n                    <v-card-text>\n                      <v-simple-table v-if=\"image.exposed_ports && image.exposed_ports.length > 0\">\n                        <template v-slot:default>\n                          <thead>\n                            <tr>\n                              <th>Container Port</th>\n                              <th>Protocol</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for=\"port in image.exposed_ports\" :key=\"`${port.container_port}-${port.protocol}`\">\n                              <td>{{ port.container_port }}</td>\n                              <td>{{ port.protocol }}</td>\n                            </tr>\n                          </tbody>\n                        </template>\n                      </v-simple-table>\n                      <v-alert v-else type=\"info\">No exposed ports found</v-alert>\n                    </v-card-text>\n                  </v-card>\n                </v-tab-item>\n                \n                <!-- Volumes Tab -->\n                <v-tab-item>\n                  <v-card flat>\n                    <v-card-text>\n                      <v-simple-table v-if=\"image.volumes && image.volumes.length > 0\">\n                        <template v-slot:default>\n                          <thead>\n                            <tr>\n                              <th>Container Path</th>\n                              <th>Mode</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for=\"volume in image.volumes\" :key=\"volume.container_path\">\n                              <td>{{ volume.container_path }}</td>\n                              <td>{{ volume.mode || 'rw' }}</td>\n                            </tr>\n                          </tbody>\n                        </template>\n                      </v-simple-table>\n                      <v-alert v-else type=\"info\">No volumes found</v-alert>\n                    </v-card-text>\n                  </v-card>\n                </v-tab-item>\n                \n                <!-- Security Tab -->\n                <v-tab-item>\n                  <v-card flat>\n                    <v-card-text>\n                      <v-row>\n                        <v-col cols=\"12\">\n                          <v-btn color=\"primary\" @click=\"scanImage\" :loading=\"scanning\">\n                            <v-icon left>mdi-shield-search</v-icon>\n                            Scan for Vulnerabilities\n                          </v-btn>\n                        </v-col>\n                      </v-row>\n                      \n                      <v-row v-if=\"scans.length > 0\">\n                        <v-col cols=\"12\">\n                          <h3>Scan History</h3>\n                          <v-simple-table>\n                            <template v-slot:default>\n                              <thead>\n                                <tr>\n                                  <th>ID</th>\n                                  <th>Type</th>\n                                  <th>Status</th>\n                                  <th>Started</th>\n                                  <th>Completed</th>\n                                  <th>Vulnerabilities</th>\n                                  <th>Actions</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr v-for=\"scan in scans\" :key=\"scan.id\">\n                                  <td>{{ scan.id }}</td>\n                                  <td>{{ scan.scan_type }}</td>\n                                  <td>\n                                    <v-chip\n                                      small\n                                      :color=\"getScanStatusColor(scan.status)\"\n                                      text-color=\"white\"\n                                    >\n                                      {{ scan.status }}\n                                    </v-chip>\n                                  </td>\n                                  <td>{{ formatDate(scan.started_at) }}</td>\n                                  <td>{{ formatDate(scan.completed_at) }}</td>\n                                  <td>\n                                    <v-chip\n                                      v-if=\"scan.critical_count > 0\"\n                                      small\n                                      color=\"red\"\n                                      text-color=\"white\"\n                                      class=\"mr-1\"\n                                    >\n                                      {{ scan.critical_count }} Critical\n                                    </v-chip>\n                                    <v-chip\n                                      v-if=\"scan.high_count > 0\"\n                                      small\n                                      color=\"orange\"\n                                      text-color=\"white\"\n                                      class=\"mr-1\"\n                                    >\n                                      {{ scan.high_count }} High\n                                    </v-chip>\n                                    <v-chip\n                                      v-if=\"scan.medium_count > 0\"\n                                      small\n                                      color=\"yellow\"\n                                      text-color=\"black\"\n                                      class=\"mr-1\"\n                                    >\n                                      {{ scan.medium_count }} Medium\n                                    </v-chip>\n                                    <v-chip\n                                      v-if=\"scan.low_count > 0\"\n                                      small\n                                      color=\"blue\"\n                                      text-color=\"white\"\n                                    >\n                                      {{ scan.low_count }} Low\n                                    </v-chip>\n                                  </td>\n                                  <td>\n                                    <v-btn\n                                      icon\n                                      small\n                                      @click=\"viewScanDetails(scan.id)\"\n                                      :disabled=\"scan.status !== 'completed'\"\n                                    >\n                                      <v-icon small>mdi-eye</v-icon>\n                                    </v-btn>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </template>\n                          </v-simple-table>\n                        </v-col>\n                      </v-row>\n                      \n                      <v-row v-else>\n                        <v-col cols=\"12\">\n                          <v-alert type=\"info\">No security scans have been performed on this image</v-alert>\n                        </v-col>\n                      </v-row>\n                    </v-card-text>\n                  </v-card>\n                </v-tab-item>\n              </v-tabs-items>\n            </template>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n    \n    <!-- Snackbar for notifications -->\n    <v-snackbar v-model=\"snackbar\" :color=\"snackbarColor\" :timeout=\"3000\">\n      {{ snackbarText }}\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn text v-bind=\"attrs\" @click=\"snackbar = false\">Close</v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\nimport { format, parseISO } from 'date-fns';\n\nexport default {\n  name: 'ImageDetail',\n  \n  data() {\n    return {\n      activeTab: 0,\n      loading: false,\n      scanning: false,\n      snackbar: false,\n      snackbarText: '',\n      snackbarColor: 'success',\n    };\n  },\n  \n  computed: {\n    ...mapState('images', ['image', 'scans']),\n    \n    imageId() {\n      return this.$route.params.id;\n    },\n  },\n  \n  created() {\n    this.fetchImageDetails();\n    this.fetchImageScans();\n  },\n  \n  methods: {\n    ...mapActions('images', ['getImage', 'getImageScans', 'scanImageVulnerabilities']),\n    \n    async fetchImageDetails() {\n      this.loading = true;\n      try {\n        await this.getImage(this.imageId);\n      } catch (error) {\n        this.showError('Failed to fetch image details: ' + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    async fetchImageScans() {\n      try {\n        await this.getImageScans(this.imageId);\n      } catch (error) {\n        this.showError('Failed to fetch image scans: ' + error.message);\n      }\n    },\n    \n    async scanImage() {\n      this.scanning = true;\n      try {\n        await this.scanImageVulnerabilities(this.imageId);\n        this.showSuccess('Security scan initiated');\n        await this.fetchImageScans();\n      } catch (error) {\n        this.showError('Failed to scan image: ' + error.message);\n      } finally {\n        this.scanning = false;\n      }\n    },\n    \n    viewScanDetails(scanId) {\n      this.$router.push({\n        name: 'ImageSecurity',\n        params: { id: this.imageId, scanId: scanId },\n      });\n    },\n    \n    goBack() {\n      this.$router.push({ name: 'Images' });\n    },\n    \n    formatSize(size) {\n      if (!size) return 'Unknown';\n      \n      const units = ['B', 'KB', 'MB', 'GB', 'TB'];\n      let formattedSize = size;\n      let unitIndex = 0;\n      \n      while (formattedSize >= 1024 && unitIndex < units.length - 1) {\n        formattedSize /= 1024;\n        unitIndex++;\n      }\n      \n      return `${formattedSize.toFixed(2)} ${units[unitIndex]}`;\n    },\n    \n    formatDate(dateString) {\n      if (!dateString) return 'Unknown';\n      try {\n        return format(parseISO(dateString), 'MMM d, yyyy HH:mm');\n      } catch (error) {\n        return dateString;\n      }\n    },\n    \n    getScanStatusColor(status) {\n      switch (status) {\n        case 'completed':\n          return 'success';\n        case 'running':\n          return 'info';\n        case 'failed':\n          return 'error';\n        default:\n          return 'grey';\n      }\n    },\n    \n    showSuccess(message) {\n      this.snackbarText = message;\n      this.snackbarColor = 'success';\n      this.snackbar = true;\n    },\n    \n    showError(message) {\n      this.snackbarText = message;\n      this.snackbarColor = 'error';\n      this.snackbar = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.image-detail {\n  height: 100%;\n}\n</style>\n","import { render } from \"./ImageDetail.vue?vue&type=template&id=5ae86ad1&scoped=true\"\nimport script from \"./ImageDetail.vue?vue&type=script&lang=js\"\nexport * from \"./ImageDetail.vue?vue&type=script&lang=js\"\n\nimport \"./ImageDetail.vue?vue&type=style&index=0&id=5ae86ad1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5ae86ad1\"]])\n\nexport default __exports__"],"names":["class","fluid","cols","large","left","color","goBack","type","image","md","dense","id","short_id","tags","tag","key","small","formatSize","size","formatDate","created_at","author","architecture","os","digest","activeTab","dark","flat","labels","Object","keys","length","default","value","env","exposed_ports","port","container_port","protocol","volumes","volume","container_path","mode","scanImage","loading","scanning","scans","scan","scan_type","getScanStatusColor","status","started_at","completed_at","critical_count","high_count","medium_count","low_count","icon","viewScanDetails","disabled","snackbar","snackbarColor","timeout","action","attrs","text","snackbarText","name","data","computed","imageId","this","$route","params","created","fetchImageDetails","fetchImageScans","methods","getImage","error","showError","message","getImageScans","scanImageVulnerabilities","showSuccess","scanId","$router","push","units","formattedSize","unitIndex","toFixed","dateString","format","parseISO","__exports__","render"],"sourceRoot":""}