{"version":3,"file":"css/433.ce901618.css","mappings":"AA2dA,+BACE,WACF","sources":["webpack://dockerforge-web-ui/./src/views/images/ImageDetail.vue"],"sourcesContent":["<template>\n  <div class=\"image-detail\">\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title class=\"headline\">\n              <v-icon large left>mdi-docker</v-icon>\n              Image Details\n              <v-spacer></v-spacer>\n              <v-btn color=\"primary\" @click=\"goBack\">\n                <v-icon left>mdi-arrow-left</v-icon>\n                Back to Images\n              </v-btn>\n            </v-card-title>\n            \n            <v-card-text v-if=\"loading\">\n              <v-skeleton-loader type=\"article\" />\n            </v-card-text>\n            \n            <v-card-text v-else-if=\"!image\">\n              <v-alert type=\"error\">Image not found</v-alert>\n            </v-card-text>\n            \n            <template v-else>\n              <v-card-text>\n                <v-row>\n                  <v-col cols=\"12\" md=\"6\">\n                    <v-list dense>\n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>ID</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.id }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Short ID</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.short_id }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Tags</v-list-item-title>\n                          <v-list-item-subtitle>\n                            <v-chip\n                              v-for=\"tag in image.tags\"\n                              :key=\"tag\"\n                              class=\"ma-1\"\n                              small\n                              color=\"primary\"\n                              text-color=\"white\"\n                            >\n                              {{ tag }}\n                            </v-chip>\n                          </v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Size</v-list-item-title>\n                          <v-list-item-subtitle>{{ formatSize(image.size) }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Created</v-list-item-title>\n                          <v-list-item-subtitle>{{ formatDate(image.created_at) }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                    </v-list>\n                  </v-col>\n                  \n                  <v-col cols=\"12\" md=\"6\">\n                    <v-list dense>\n                      <v-list-item v-if=\"image.author\">\n                        <v-list-item-content>\n                          <v-list-item-title>Author</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.author }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item v-if=\"image.architecture\">\n                        <v-list-item-content>\n                          <v-list-item-title>Architecture</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.architecture }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item v-if=\"image.os\">\n                        <v-list-item-content>\n                          <v-list-item-title>OS</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.os }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item v-if=\"image.digest\">\n                        <v-list-item-content>\n                          <v-list-item-title>Digest</v-list-item-title>\n                          <v-list-item-subtitle>{{ image.digest }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                    </v-list>\n                  </v-col>\n                </v-row>\n              </v-card-text>\n              \n              <v-divider></v-divider>\n              \n              <v-tabs v-model=\"activeTab\" background-color=\"primary\" dark>\n                <v-tab>Labels</v-tab>\n                <v-tab>Environment</v-tab>\n                <v-tab>Ports</v-tab>\n                <v-tab>Volumes</v-tab>\n                <v-tab>Security</v-tab>\n              </v-tabs>\n              \n              <v-tabs-items v-model=\"activeTab\">\n                <!-- Labels Tab -->\n                <v-tab-item>\n                  <v-card flat>\n                    <v-card-text>\n                      <v-simple-table v-if=\"image.labels && Object.keys(image.labels).length > 0\">\n                        <template v-slot:default>\n                          <thead>\n                            <tr>\n                              <th>Key</th>\n                              <th>Value</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for=\"(value, key) in image.labels\" :key=\"key\">\n                              <td>{{ key }}</td>\n                              <td>{{ value }}</td>\n                            </tr>\n                          </tbody>\n                        </template>\n                      </v-simple-table>\n                      <v-alert v-else type=\"info\">No labels found</v-alert>\n                    </v-card-text>\n                  </v-card>\n                </v-tab-item>\n                \n                <!-- Environment Tab -->\n                <v-tab-item>\n                  <v-card flat>\n                    <v-card-text>\n                      <v-simple-table v-if=\"image.env && image.env.length > 0\">\n                        <template v-slot:default>\n                          <thead>\n                            <tr>\n                              <th>Key</th>\n                              <th>Value</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for=\"env in image.env\" :key=\"env.key\">\n                              <td>{{ env.key }}</td>\n                              <td>{{ env.value }}</td>\n                            </tr>\n                          </tbody>\n                        </template>\n                      </v-simple-table>\n                      <v-alert v-else type=\"info\">No environment variables found</v-alert>\n                    </v-card-text>\n                  </v-card>\n                </v-tab-item>\n                \n                <!-- Ports Tab -->\n                <v-tab-item>\n                  <v-card flat>\n                    <v-card-text>\n                      <v-simple-table v-if=\"image.exposed_ports && image.exposed_ports.length > 0\">\n                        <template v-slot:default>\n                          <thead>\n                            <tr>\n                              <th>Container Port</th>\n                              <th>Protocol</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for=\"port in image.exposed_ports\" :key=\"`${port.container_port}-${port.protocol}`\">\n                              <td>{{ port.container_port }}</td>\n                              <td>{{ port.protocol }}</td>\n                            </tr>\n                          </tbody>\n                        </template>\n                      </v-simple-table>\n                      <v-alert v-else type=\"info\">No exposed ports found</v-alert>\n                    </v-card-text>\n                  </v-card>\n                </v-tab-item>\n                \n                <!-- Volumes Tab -->\n                <v-tab-item>\n                  <v-card flat>\n                    <v-card-text>\n                      <v-simple-table v-if=\"image.volumes && image.volumes.length > 0\">\n                        <template v-slot:default>\n                          <thead>\n                            <tr>\n                              <th>Container Path</th>\n                              <th>Mode</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for=\"volume in image.volumes\" :key=\"volume.container_path\">\n                              <td>{{ volume.container_path }}</td>\n                              <td>{{ volume.mode || 'rw' }}</td>\n                            </tr>\n                          </tbody>\n                        </template>\n                      </v-simple-table>\n                      <v-alert v-else type=\"info\">No volumes found</v-alert>\n                    </v-card-text>\n                  </v-card>\n                </v-tab-item>\n                \n                <!-- Security Tab -->\n                <v-tab-item>\n                  <v-card flat>\n                    <v-card-text>\n                      <v-row>\n                        <v-col cols=\"12\">\n                          <v-btn color=\"primary\" @click=\"scanImage\" :loading=\"scanning\">\n                            <v-icon left>mdi-shield-search</v-icon>\n                            Scan for Vulnerabilities\n                          </v-btn>\n                        </v-col>\n                      </v-row>\n                      \n                      <v-row v-if=\"scans.length > 0\">\n                        <v-col cols=\"12\">\n                          <h3>Scan History</h3>\n                          <v-simple-table>\n                            <template v-slot:default>\n                              <thead>\n                                <tr>\n                                  <th>ID</th>\n                                  <th>Type</th>\n                                  <th>Status</th>\n                                  <th>Started</th>\n                                  <th>Completed</th>\n                                  <th>Vulnerabilities</th>\n                                  <th>Actions</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                <tr v-for=\"scan in scans\" :key=\"scan.id\">\n                                  <td>{{ scan.id }}</td>\n                                  <td>{{ scan.scan_type }}</td>\n                                  <td>\n                                    <v-chip\n                                      small\n                                      :color=\"getScanStatusColor(scan.status)\"\n                                      text-color=\"white\"\n                                    >\n                                      {{ scan.status }}\n                                    </v-chip>\n                                  </td>\n                                  <td>{{ formatDate(scan.started_at) }}</td>\n                                  <td>{{ formatDate(scan.completed_at) }}</td>\n                                  <td>\n                                    <v-chip\n                                      v-if=\"scan.critical_count > 0\"\n                                      small\n                                      color=\"red\"\n                                      text-color=\"white\"\n                                      class=\"mr-1\"\n                                    >\n                                      {{ scan.critical_count }} Critical\n                                    </v-chip>\n                                    <v-chip\n                                      v-if=\"scan.high_count > 0\"\n                                      small\n                                      color=\"orange\"\n                                      text-color=\"white\"\n                                      class=\"mr-1\"\n                                    >\n                                      {{ scan.high_count }} High\n                                    </v-chip>\n                                    <v-chip\n                                      v-if=\"scan.medium_count > 0\"\n                                      small\n                                      color=\"yellow\"\n                                      text-color=\"black\"\n                                      class=\"mr-1\"\n                                    >\n                                      {{ scan.medium_count }} Medium\n                                    </v-chip>\n                                    <v-chip\n                                      v-if=\"scan.low_count > 0\"\n                                      small\n                                      color=\"blue\"\n                                      text-color=\"white\"\n                                    >\n                                      {{ scan.low_count }} Low\n                                    </v-chip>\n                                  </td>\n                                  <td>\n                                    <v-btn\n                                      icon\n                                      small\n                                      @click=\"viewScanDetails(scan.id)\"\n                                      :disabled=\"scan.status !== 'completed'\"\n                                    >\n                                      <v-icon small>mdi-eye</v-icon>\n                                    </v-btn>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </template>\n                          </v-simple-table>\n                        </v-col>\n                      </v-row>\n                      \n                      <v-row v-else>\n                        <v-col cols=\"12\">\n                          <v-alert type=\"info\">No security scans have been performed on this image</v-alert>\n                        </v-col>\n                      </v-row>\n                    </v-card-text>\n                  </v-card>\n                </v-tab-item>\n              </v-tabs-items>\n            </template>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n    \n    <!-- Snackbar for notifications -->\n    <v-snackbar v-model=\"snackbar\" :color=\"snackbarColor\" :timeout=\"3000\">\n      {{ snackbarText }}\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn text v-bind=\"attrs\" @click=\"snackbar = false\">Close</v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\nimport { format, parseISO } from 'date-fns';\n\nexport default {\n  name: 'ImageDetail',\n  \n  data() {\n    return {\n      activeTab: 0,\n      loading: false,\n      scanning: false,\n      snackbar: false,\n      snackbarText: '',\n      snackbarColor: 'success',\n    };\n  },\n  \n  computed: {\n    ...mapState('images', ['image', 'scans']),\n    \n    imageId() {\n      return this.$route.params.id;\n    },\n  },\n  \n  created() {\n    this.fetchImageDetails();\n    this.fetchImageScans();\n  },\n  \n  methods: {\n    ...mapActions('images', ['getImage', 'getImageScans', 'scanImageVulnerabilities']),\n    \n    async fetchImageDetails() {\n      this.loading = true;\n      try {\n        await this.getImage(this.imageId);\n      } catch (error) {\n        this.showError('Failed to fetch image details: ' + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    async fetchImageScans() {\n      try {\n        await this.getImageScans(this.imageId);\n      } catch (error) {\n        this.showError('Failed to fetch image scans: ' + error.message);\n      }\n    },\n    \n    async scanImage() {\n      this.scanning = true;\n      try {\n        await this.scanImageVulnerabilities(this.imageId);\n        this.showSuccess('Security scan initiated');\n        await this.fetchImageScans();\n      } catch (error) {\n        this.showError('Failed to scan image: ' + error.message);\n      } finally {\n        this.scanning = false;\n      }\n    },\n    \n    viewScanDetails(scanId) {\n      this.$router.push({\n        name: 'ImageSecurity',\n        params: { id: this.imageId, scanId: scanId },\n      });\n    },\n    \n    goBack() {\n      this.$router.push({ name: 'Images' });\n    },\n    \n    formatSize(size) {\n      if (!size) return 'Unknown';\n      \n      const units = ['B', 'KB', 'MB', 'GB', 'TB'];\n      let formattedSize = size;\n      let unitIndex = 0;\n      \n      while (formattedSize >= 1024 && unitIndex < units.length - 1) {\n        formattedSize /= 1024;\n        unitIndex++;\n      }\n      \n      return `${formattedSize.toFixed(2)} ${units[unitIndex]}`;\n    },\n    \n    formatDate(dateString) {\n      if (!dateString) return 'Unknown';\n      try {\n        return format(parseISO(dateString), 'MMM d, yyyy HH:mm');\n      } catch (error) {\n        return dateString;\n      }\n    },\n    \n    getScanStatusColor(status) {\n      switch (status) {\n        case 'completed':\n          return 'success';\n        case 'running':\n          return 'info';\n        case 'failed':\n          return 'error';\n        default:\n          return 'grey';\n      }\n    },\n    \n    showSuccess(message) {\n      this.snackbarText = message;\n      this.snackbarColor = 'success';\n      this.snackbar = true;\n    },\n    \n    showError(message) {\n      this.snackbarText = message;\n      this.snackbarColor = 'error';\n      this.snackbar = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.image-detail {\n  height: 100%;\n}\n</style>\n"],"names":[],"sourceRoot":""}