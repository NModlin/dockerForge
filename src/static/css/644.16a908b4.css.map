{"version":3,"file":"css/644.16a908b4.css","mappings":"AAmeA,iCACE,WACF","sources":["webpack://dockerforge-web-ui/./src/views/images/ImageSecurity.vue"],"sourcesContent":["<template>\n  <div class=\"image-security\">\n    <v-container fluid>\n      <v-row>\n        <v-col cols=\"12\">\n          <v-card>\n            <v-card-title class=\"headline\">\n              <v-icon large left>mdi-shield-search</v-icon>\n              Security Scan Results\n              <v-spacer></v-spacer>\n              <v-btn color=\"primary\" @click=\"goBack\">\n                <v-icon left>mdi-arrow-left</v-icon>\n                Back to Image\n              </v-btn>\n            </v-card-title>\n            \n            <v-card-text v-if=\"loading\">\n              <v-skeleton-loader type=\"article\" />\n            </v-card-text>\n            \n            <v-card-text v-else-if=\"!currentScan\">\n              <v-alert type=\"error\">Scan not found</v-alert>\n            </v-card-text>\n            \n            <template v-else>\n              <v-card-text>\n                <v-row>\n                  <v-col cols=\"12\" md=\"6\">\n                    <v-list dense>\n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Scan ID</v-list-item-title>\n                          <v-list-item-subtitle>{{ currentScan.scan.id }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Scan Type</v-list-item-title>\n                          <v-list-item-subtitle>{{ currentScan.scan.scan_type }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Status</v-list-item-title>\n                          <v-list-item-subtitle>\n                            <v-chip\n                              small\n                              :color=\"getScanStatusColor(currentScan.scan.status)\"\n                              text-color=\"white\"\n                            >\n                              {{ currentScan.scan.status }}\n                            </v-chip>\n                          </v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                    </v-list>\n                  </v-col>\n                  \n                  <v-col cols=\"12\" md=\"6\">\n                    <v-list dense>\n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Started</v-list-item-title>\n                          <v-list-item-subtitle>{{ formatDate(currentScan.scan.started_at) }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Completed</v-list-item-title>\n                          <v-list-item-subtitle>{{ formatDate(currentScan.scan.completed_at) }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                      \n                      <v-list-item>\n                        <v-list-item-content>\n                          <v-list-item-title>Total Vulnerabilities</v-list-item-title>\n                          <v-list-item-subtitle>{{ currentScan.scan.vulnerabilities_count || 0 }}</v-list-item-subtitle>\n                        </v-list-item-content>\n                      </v-list-item>\n                    </v-list>\n                  </v-col>\n                </v-row>\n                \n                <v-row class=\"mt-4\">\n                  <v-col cols=\"12\">\n                    <v-card outlined>\n                      <v-card-title>Vulnerability Summary</v-card-title>\n                      <v-card-text>\n                        <v-row>\n                          <v-col cols=\"12\" sm=\"6\" md=\"3\">\n                            <v-card color=\"red\" dark>\n                              <v-card-text class=\"text-center\">\n                                <div class=\"text-h4\">{{ currentScan.scan.critical_count || 0 }}</div>\n                                <div>Critical</div>\n                              </v-card-text>\n                            </v-card>\n                          </v-col>\n                          \n                          <v-col cols=\"12\" sm=\"6\" md=\"3\">\n                            <v-card color=\"orange\" dark>\n                              <v-card-text class=\"text-center\">\n                                <div class=\"text-h4\">{{ currentScan.scan.high_count || 0 }}</div>\n                                <div>High</div>\n                              </v-card-text>\n                            </v-card>\n                          </v-col>\n                          \n                          <v-col cols=\"12\" sm=\"6\" md=\"3\">\n                            <v-card color=\"yellow\" dark>\n                              <v-card-text class=\"text-center\">\n                                <div class=\"text-h4 black--text\">{{ currentScan.scan.medium_count || 0 }}</div>\n                                <div class=\"black--text\">Medium</div>\n                              </v-card-text>\n                            </v-card>\n                          </v-col>\n                          \n                          <v-col cols=\"12\" sm=\"6\" md=\"3\">\n                            <v-card color=\"blue\" dark>\n                              <v-card-text class=\"text-center\">\n                                <div class=\"text-h4\">{{ currentScan.scan.low_count || 0 }}</div>\n                                <div>Low</div>\n                              </v-card-text>\n                            </v-card>\n                          </v-col>\n                        </v-row>\n                      </v-card-text>\n                    </v-card>\n                  </v-col>\n                </v-row>\n              </v-card-text>\n              \n              <v-divider></v-divider>\n              \n              <v-card-title>\n                Vulnerabilities\n                <v-spacer></v-spacer>\n                <v-text-field\n                  v-model=\"search\"\n                  append-icon=\"mdi-magnify\"\n                  label=\"Search\"\n                  single-line\n                  hide-details\n                  class=\"mx-4\"\n                ></v-text-field>\n                <v-select\n                  v-model=\"severityFilter\"\n                  :items=\"severityOptions\"\n                  label=\"Severity\"\n                  hide-details\n                  class=\"mx-4\"\n                  style=\"max-width: 150px\"\n                ></v-select>\n              </v-card-title>\n              \n              <v-data-table\n                :headers=\"headers\"\n                :items=\"filteredVulnerabilities\"\n                :search=\"search\"\n                :items-per-page=\"10\"\n                :footer-props=\"{\n                  'items-per-page-options': [5, 10, 15, 20, 50],\n                }\"\n                class=\"elevation-1\"\n              >\n                <template v-slot:item.severity=\"{ item }\">\n                  <v-chip\n                    small\n                    :color=\"getSeverityColor(item.severity)\"\n                    :text-color=\"item.severity === 'medium' ? 'black' : 'white'\"\n                  >\n                    {{ item.severity }}\n                  </v-chip>\n                </template>\n                \n                <template v-slot:item.reference_urls=\"{ item }\">\n                  <div v-if=\"item.reference_urls && item.reference_urls.length > 0\">\n                    <v-btn\n                      v-for=\"(url, index) in item.reference_urls\"\n                      :key=\"index\"\n                      x-small\n                      text\n                      color=\"primary\"\n                      :href=\"url\"\n                      target=\"_blank\"\n                      class=\"mr-1\"\n                    >\n                      <v-icon x-small left>mdi-open-in-new</v-icon>\n                      Link {{ index + 1 }}\n                    </v-btn>\n                  </div>\n                  <span v-else>-</span>\n                </template>\n                \n                <template v-slot:item.actions=\"{ item }\">\n                  <v-btn\n                    icon\n                    small\n                    @click=\"showVulnerabilityDetails(item)\"\n                  >\n                    <v-icon small>mdi-information-outline</v-icon>\n                  </v-btn>\n                </template>\n              </v-data-table>\n            </template>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n    \n    <!-- Vulnerability Details Dialog -->\n    <v-dialog v-model=\"detailsDialog\" max-width=\"700px\">\n      <v-card v-if=\"selectedVulnerability\">\n        <v-card-title class=\"headline\">\n          <v-chip\n            small\n            :color=\"getSeverityColor(selectedVulnerability.severity)\"\n            :text-color=\"selectedVulnerability.severity === 'medium' ? 'black' : 'white'\"\n            class=\"mr-2\"\n          >\n            {{ selectedVulnerability.severity }}\n          </v-chip>\n          {{ selectedVulnerability.name }}\n        </v-card-title>\n        \n        <v-card-text>\n          <v-row>\n            <v-col cols=\"12\">\n              <div class=\"subtitle-1 font-weight-bold\">Description</div>\n              <div>{{ selectedVulnerability.description }}</div>\n            </v-col>\n            \n            <v-col cols=\"12\" sm=\"6\">\n              <div class=\"subtitle-1 font-weight-bold\">Package</div>\n              <div>{{ selectedVulnerability.package_name || 'N/A' }}</div>\n            </v-col>\n            \n            <v-col cols=\"12\" sm=\"6\">\n              <div class=\"subtitle-1 font-weight-bold\">Current Version</div>\n              <div>{{ selectedVulnerability.package_version || 'N/A' }}</div>\n            </v-col>\n            \n            <v-col cols=\"12\" sm=\"6\">\n              <div class=\"subtitle-1 font-weight-bold\">Fixed Version</div>\n              <div>{{ selectedVulnerability.fixed_version || 'N/A' }}</div>\n            </v-col>\n            \n            <v-col cols=\"12\" sm=\"6\">\n              <div class=\"subtitle-1 font-weight-bold\">CVE ID</div>\n              <div>{{ selectedVulnerability.cve_id || 'N/A' }}</div>\n            </v-col>\n            \n            <v-col cols=\"12\">\n              <div class=\"subtitle-1 font-weight-bold\">References</div>\n              <div v-if=\"selectedVulnerability.reference_urls && selectedVulnerability.reference_urls.length > 0\">\n                <v-btn\n                  v-for=\"(url, index) in selectedVulnerability.reference_urls\"\n                  :key=\"index\"\n                  small\n                  text\n                  color=\"primary\"\n                  :href=\"url\"\n                  target=\"_blank\"\n                  class=\"mr-1 mb-1\"\n                >\n                  <v-icon small left>mdi-open-in-new</v-icon>\n                  Reference {{ index + 1 }}\n                </v-btn>\n              </div>\n              <div v-else>No references available</div>\n            </v-col>\n          </v-row>\n        </v-card-text>\n        \n        <v-card-actions>\n          <v-btn\n            color=\"info\"\n            text\n            @click=\"resolveWithAI(selectedVulnerability)\"\n            :disabled=\"!selectedVulnerability.fixed_version\"\n          >\n            <v-icon left>mdi-robot</v-icon>\n            Resolve with AI\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" text @click=\"detailsDialog = false\">Close</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    \n    <!-- Snackbar for notifications -->\n    <v-snackbar v-model=\"snackbar\" :color=\"snackbarColor\" :timeout=\"3000\">\n      {{ snackbarText }}\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn text v-bind=\"attrs\" @click=\"snackbar = false\">Close</v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions, mapMutations } from 'vuex';\nimport axios from 'axios';\nimport { format, parseISO } from 'date-fns';\n\nexport default {\n  name: 'ImageSecurity',\n  \n  data() {\n    return {\n      loading: false,\n      search: '',\n      severityFilter: 'all',\n      severityOptions: [\n        { text: 'All Severities', value: 'all' },\n        { text: 'Critical', value: 'critical' },\n        { text: 'High', value: 'high' },\n        { text: 'Medium', value: 'medium' },\n        { text: 'Low', value: 'low' },\n      ],\n      headers: [\n        { text: 'Name', value: 'name' },\n        { text: 'Severity', value: 'severity' },\n        { text: 'Package', value: 'package_name' },\n        { text: 'Current Version', value: 'package_version' },\n        { text: 'Fixed Version', value: 'fixed_version' },\n        { text: 'CVE ID', value: 'cve_id' },\n        { text: 'References', value: 'reference_urls' },\n        { text: 'Actions', value: 'actions', sortable: false },\n      ],\n      detailsDialog: false,\n      selectedVulnerability: null,\n      snackbar: false,\n      snackbarText: '',\n      snackbarColor: 'success',\n    };\n  },\n  \n  computed: {\n    ...mapState('images', ['currentScan']),\n    \n    imageId() {\n      return this.$route.params.id;\n    },\n    \n    scanId() {\n      return parseInt(this.$route.params.scanId);\n    },\n    \n    filteredVulnerabilities() {\n      if (!this.currentScan || !this.currentScan.vulnerabilities) {\n        return [];\n      }\n      \n      if (this.severityFilter === 'all') {\n        return this.currentScan.vulnerabilities;\n      }\n      \n      return this.currentScan.vulnerabilities.filter(v => v.severity === this.severityFilter);\n    },\n  },\n  \n  created() {\n    this.fetchScanDetails();\n  },\n  \n  methods: {\n    ...mapActions('images', ['getImageScan']),\n    ...mapActions({\n      updateContext: 'chat/updateContext'\n    }),\n    ...mapMutations({\n      setActive: 'chat/SET_ACTIVE'\n    }),\n    \n    async fetchScanDetails() {\n      this.loading = true;\n      try {\n        await this.getImageScan({ imageId: this.imageId, scanId: this.scanId });\n      } catch (error) {\n        this.showError('Failed to fetch scan details: ' + error.message);\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    goBack() {\n      this.$router.push({ name: 'ImageDetail', params: { id: this.imageId } });\n    },\n    \n    showVulnerabilityDetails(vulnerability) {\n      this.selectedVulnerability = vulnerability;\n      this.detailsDialog = true;\n    },\n    \n    formatDate(dateString) {\n      if (!dateString) return 'Unknown';\n      try {\n        return format(parseISO(dateString), 'MMM d, yyyy HH:mm');\n      } catch (error) {\n        return dateString;\n      }\n    },\n    \n    getScanStatusColor(status) {\n      switch (status) {\n        case 'completed':\n          return 'success';\n        case 'running':\n          return 'info';\n        case 'failed':\n          return 'error';\n        default:\n          return 'grey';\n      }\n    },\n    \n    getSeverityColor(severity) {\n      switch (severity) {\n        case 'critical':\n          return 'red';\n        case 'high':\n          return 'orange';\n        case 'medium':\n          return 'yellow';\n        case 'low':\n          return 'blue';\n        default:\n          return 'grey';\n      }\n    },\n    \n    showSuccess(message) {\n      this.snackbarText = message;\n      this.snackbarColor = 'success';\n      this.snackbar = true;\n    },\n    \n    async resolveWithAI(vulnerability) {\n      try {\n        // Start a security workflow for the vulnerability\n        const response = await axios.post(`/api/chat/security/start-workflow?vulnerability_id=${vulnerability.cve_id || vulnerability.name}`);\n        \n        // Set context data for chat\n        this.updateContext({\n          currentPage: 'security',\n          currentImageId: this.imageId,\n          vulnerability_id: vulnerability.cve_id || vulnerability.name,\n          vulnerability_severity: vulnerability.severity,\n          vulnerability_description: vulnerability.description,\n          affected_package: vulnerability.package_name,\n          current_version: vulnerability.package_version,\n          fixed_version: vulnerability.fixed_version,\n          cve_id: vulnerability.cve_id,\n          workflow_id: response.data.message.context?.workflow_id\n        });\n        \n        // Open chat sidebar\n        this.setActive(true);\n        \n        // Close the details dialog\n        this.detailsDialog = false;\n        \n        // Show success notification\n        this.showSuccess('AI-assisted resolution workflow started. Check the chat sidebar.');\n      } catch (error) {\n        console.error('Error starting security workflow:', error);\n        this.showError('Failed to start AI resolution workflow.');\n      }\n    },\n    \n    showError(message) {\n      this.snackbarText = message;\n      this.snackbarColor = 'error';\n      this.snackbar = true;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.image-security {\n  height: 100%;\n}\n</style>\n"],"names":[],"sourceRoot":""}