services:
  dockerforge:
    image: dockerforge-custom:latest
    container_name: dockerforge
    restart: unless-stopped
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      - ./media:/app/media
      - /var/run/docker.sock:/var/run/docker.sock
      - ./custom-entrypoint.sh:/app/custom-entrypoint.sh
    environment:
      - DOCKERFORGE_CONFIG_PATH=/app/config/dockerforge.yaml
      - DOCKERFORGE_DATA_DIR=/app/data
      - DATABASE_URL=postgresql://dockerforge:dockerforge@db:5432/dockerforge
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=change_this_to_a_secure_random_string_in_production
      # Using the API key from .env file
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    ports:
      - "8080:8080"
      - "54321:54321"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - dockerforge-network
    command: ["/app/custom-entrypoint.sh"]



  db:
    image: postgres:15-alpine
    container_name: dockerforge-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=dockerforge
      - POSTGRES_PASSWORD=dockerforge
      - POSTGRES_DB=dockerforge
    networks:
      - dockerforge-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dockerforge"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: dockerforge-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - dockerforge-network

volumes:
  postgres_data:
  redis_data:

networks:
  dockerforge-network:
    driver: bridge
